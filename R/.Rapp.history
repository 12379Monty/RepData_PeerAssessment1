con <- url("http://www.jhsph.edu","r")
?url
x <- readLines(con)
str(x)
x
head ( x)
q()
cur
?cur
q()
library(dev_tools)
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(help=KernSmooth)
copy
??install.packages
??uninstall
remove.packages("KernSmooth")
library(help=KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
2656.04
2715.04 -
2656.04
2656.04 -2481.4
Load ChipDesc to get Exp090A and 090B set#
load('Data/Exp090.ChipDesc.frm')#
dim(Exp090.ChipDesc.frm)#
#[1] 48  7#
Exp090.ChipDesc.frm[1:5,]#
   #Series Chip  Print Subarray LimsID Pool nM#
#1 37i-3-A    1 37i-03        A  125_1    A  1#
#2 37i-3-B    1 37i-03        B  125_2    A  1#
#3 37i-3-C    1 37i-03        C  125_3    A  1#
#4 37i-3-D    1 37i-03        D  125_4    A  1#
#5 37i-7-A    2 37i-07        A  125_5    A  1#
#
with(Exp090.ChipDesc.frm,#
   print(table(Pool, nM)))#
    #nM#
#Pool 1 3 5#
   #A 8 8 8#
   #B 8 8 8
q()
library(knitr)
library(markdown)
library(slidify)
install.packages('slidify')
require(devtools)
install_github("slidify", "ramnathv")
update.packages('stringr')
install_github("slidify", "ramnathv")
install.packages('stringr')
install_github("slidify", "ramnathv")
remove.packages(stringr)
remove.packages('stringr')
install.packages('stringr')
remove.packages('stringr')
??install.packages
install.packages('stringr', type='source'
)
install_github("slidify", "ramnathv")
q()
options(stringsAsFactors=F)#
options('stringsAsFactors')#
#
zz <- function(n='') source(paste("Scripts/t", n, sep=''))#
PLOT <- function() {OLDPNG <- PNG;PNG <<- 'png';zz();PNG <<- 'pdf';zz();PNG <<- OLDPNG}#
pdfPLOT <- function() { OLDPNG <- PNG; PNG <<- 'pdf'; zz(); PNG <<- OLDPNG}#
pngPLOT <- function() { OLDPNG <- PNG; PNG <<- 'png'; zz(); PNG <<- OLDPNG}#
#
setwd('/Users/Jill/Documents/Fcollin_Admin/Courses/ReproducibleResearch/RepData_PeerAssessment1')#
WRKDIR <- getwd()#
WRKDIR#
#
############################################################
#GRAPH
Read Data#
list.files('..')
list.files('.')
list.files('..')
tion() { OLDPNG <- PNG; PNG <<- 'png'; zz(); PNG <<- OLDPNG}#
#
setwd('/Users/Jill/Documents/Fcollin_Admin/Courses/ReproducibleResearch/RepData_PeerAssessment1/R')#
WRKDIR <- getwd()#
WRKDIR#
#
############################################################
#GRAPH_PNG <- "Graphs/S1A/png/"#
#dir.create(GRAPH_PNG)#
############################################################
# Read Data#
list.files('..')
activity.frm <- read.table('../activity.csv', header=T, sep=',', as.is=T)#
head(activity.frm)#
#
act.frm <- within(activity.frm,#
  {#
   Hr <- interval %/% 100#
   Min <- interval %% 100#
 }#
)
1       25#
#
act.frm <- within(activity.frm,#
  {#
   Hr <- interval %/% 100#
   Min <- interval %% 100#
 }#
)#
#
table(act.frm$Hr)#
#0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23#
#732 732 732 732 732 732 732 732 732 732 732 732 732 732 732 732 732 732 732 732 732 732 732 732#
#
table(act.frm$Min)
str(activity.frm)
str(activity.frm)
str(act.frm)
'data.frame':	17568 obs. of  5 variables:#
 $ steps   : int  NA NA NA NA NA NA NA NA NA NA ...#
 $ date    : chr  "2012-10-01" "2012-10-01" "2012-10-01" "2012-10-01" ...#
 $ interval: int  0 5 10 15 20 25 30 35 40 45 ...#
 $ Min     : num  0 5 10 15 20 25 30 35 40 45 ...#
 $ Hr      : num  0 0 0 0 0 0 0 0 0 0 ...
with(act.frm, sum(100*Hr+Min == Interval))
with(act.frm, sum(100*Hr+Min == interval))
with(act.frm, table(date))
with(act.frm,#
   Steps.ByDay.lst <<- split(steps, date)#
   )#
Steps.PerDay.vec <- sapply(Steps.ByDay.lst, sum, narm=T)
summary(Steps.PerDay.vec)#
   #Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's#
     #42    8842   10770   10770   13300   21200       8#
#
sum(sapply(Steps.ByDay.lst, function(x) sum(is.na(x)))==288)
mean(Steps.PerDay.vec, na.rm=T)
What is the average daily activity pattern?#
#```{r}#
   with(act.frm,#
   Steps.ByInt.lst <<- split(steps, paste(Hr, Min, sep=':'))#
   )#
Steps.ByInt.vec <- sapply(Steps.ByInt.lst, mean, na.rm=T)
plot(as.fsctor(names(Steps.ByInt.vec)), Steps.ByInt.vec)
plot(as.factor(names(Steps.ByInt.vec)), Steps.ByInt.vec)
What is the average daily activity pattern?#
   with(act.frm,#
   Steps.ByInt.lst <<- split(steps, #
      paste(formatC(Hr, width=2, flag='0'), #
      paste(formatC(Min, width=2, flag='0'),#
      sep=':'))#
   )#
Steps.ByInt.vec <- sapply(Steps.ByInt.lst, mean, na.rm=T)
What is the average daily activity pattern?#
   with(act.frm,#
   Steps.ByInt.lst <<- split(steps, #
      paste(formatC(Hr, width=2, flag='0'), #
      paste(formatC(Min, width=2, flag='0'),#
      sep=':')))#
   )#
Steps.ByInt.vec <- sapply(Steps.ByInt.lst, mean, na.rm=T)
plot(as.factor(names(Steps.ByInt.vec)), Steps.ByInt.vec)
plot(as.factor(names(Steps.ByInt.vec)), Steps.ByInt.vec, type='l')
plot(as.factor(names(Steps.ByInt.vec)), Steps.ByInt.vec, type='l')
??weekdays
?weekdays
act.frm <- within(activity.frm,#
  {#
   WeekDay <- weekdays(as.date(date))#
   Hr <- interval %/% 100#
   Min <- interval %% 100#
 }#
)
act.frm <- within(activity.frm,#
  {#
   WeekDay <- weekdays(as.date(date))#
   Hr <- interval %/% 100#
   Min <- interval %% 100#
 }#
)act.frm <- within(activity.frm,#
  {#
   WeekDay <- weekdays(as.Date(date))#
   Hr <- interval %/% 100#
   Min <- interval %% 100#
 }#
)
str(activity.frm)
?weekdays
activity.frm[1,]
as.date(activity.frm$date[1])
as.Date(activity.frm$date[1])
as.Date(activity.frm$date)[1]
as.Date(activity.frm$date)[1:5]
weekdays(
as.Date(activity.frm$date)[1:5])
act.frm <- within(activity.frm,#
  {#
   WeekDay <- weekdays(as.Date(date))#
   Hr <- interval %/% 100#
   Min <- interval %% 100#
 }#
)
str(act.frm)
$ steps   : int  NA NA NA NA NA NA NA NA NA NA ...#
 $ date    : chr  "2012-10-01" "2012-10-01" "2012-10-01" "2012-10-01" ...#
 $ interval: int  0 5 10 15 20 25 30 35 40 45 ...#
 $ Min     : num  0 5 10 15 20 25 30 35 40 45 ...#
 $ Hr      : num  0 0 0 0 0 0 0 0 0 0 ...#
 $ WeekDay : chr  "Monday" "Monday" "Monday" "Monday" ...#
>
Hr.vec  <- activity.frm$interval %/% 100#
Min.vec <- activity.frm$interval %% 100#
DayofWeek.vec <- weekdays(as.Date(activity.frm$date))
table(DayofWeek.vec)
DayType.vec <- if.else(is.element(DayofWeek.vec, c('Saturday', 'Sunday')), 'WeekEnd', 'WeekDay')#
table(DayType.vec, DayofWeek.vec)
DayType.vec <- ifelse(is.element(DayofWeek.vec, c('Saturday', 'Sunday')), 'WeekEnd', 'WeekDay')#
table(DayType.vec, DayofWeek.vec)
str(activity.frm)
d      0      0     2304   2304        0       0         0#
#
act.frm <- data.frame(#
   Date = activity.frm$date,#
   DayofWeek = DayofWeek.vec,#
   DayType = DayType.vec,#
   Hr = Hr.vec, #
   Min = Min.vec )#
#
str(act.frm)
sum(100*Hr.vec+Min.vec == activity.frm$interval))
sum(100*Hr.vec+Min.vec == activity.frm$interval)
with(act.frm, table(Date))#
#date#
#2012-10-
288        288        288        288        288        288        288#
#
## What is mean total number of steps taken per day?#
with(act.frm, #
   Steps.ByDay.lst <<- split(steps, Date)#
   )#
Steps.PerDay.vec <- sapply(Steps.ByDay.lst, sum, narm=T)#
#
summary(Steps.PerDay.vec)
act.frm <- data.frame(#
   Date = activity.frm$date,#
   DayofWeek = DayofWeek.vec,#
   DayType = DayType.vec,#
   Hr = Hr.vec,#
   Min = Min.vec, #
   Steps = activity.frm$steps )#
#
str(act.frm)#
#'data.frame':  17568 obs. of  5 variables:
288        288        288        288        288        288#
#
## What is mean total number of steps taken per day?#
with(act.frm,#
   Steps.ByDay.lst <<- split(steps, Date)#
   )#
Steps.PerDay.vec <- sapply(Steps.ByDay.lst, sum, narm=T)
What is mean total number of Steps taken per day?#
with(act.frm,#
   Steps.ByDay.lst <<- split(Steps, Date)#
   )#
Steps.PerDay.vec <- sapply(Steps.ByDay.lst, sum, narm=T)#
#
summary(Steps.PerDay.vec)#
   #Min. 1st
sum(sapply(Steps.ByDay.lst, function(x) sum(is.na(x)))==288)#
#[1] 8#
# Check!#
#
mean(Steps.PerDay.vec, na.rm=T)#
#[1] 10767.19
What is the average daily activity pattern?#
   with(act.frm,#
   Steps.ByInt.lst <<- split(Steps,#
      paste(formatC(Hr, width=2, flag='0'),#
      paste(formatC(Min, width=2, flag='0'),#
      sep=':')))#
   )#
Steps.ByInt.vec <- sapply(Steps.ByInt.lst, mean, na.rm=T)
plot(as.factor(names(Steps.ByInt.vec)), Steps.ByInt.vec, type='l')
plot(x=as.factor(names(Steps.ByInt.vec)), y=Steps.ByInt.vec, type='l')
plot(x=1:length(=Steps.ByInt.vec), xlab='Interval of Day',#
    y=Steps.ByInt.vec, 'Steps', type='l')
plot(x=1:length(Steps.ByInt.vec), xlab='Interval of Day', #
    y=Steps.ByInt.vec, 'Steps', type='l')
1:length(Steps.ByInt.vec)
plot(x=1:length(Steps.ByInt.vec), xlab='Interval of Day', #
    y=Steps.ByInt.vec, ylim='Steps', type='l')
plot(x=1:length(Steps.ByInt.vec), xlab='Interval of Day', #
    y=Steps.ByInt.vec, ylab='Steps', type='l')
axis(side=1, at=pretty(1:length(Steps.ByInt.vec), #
     names(Steps.ByInt.vec)[pretty(1:length(Steps.ByInt.vec)],#
     las=2)
plot(x=1:length(Steps.ByInt.vec), xlab='Interval of Day', #
    y=Steps.ByInt.vec, ylab='Steps', type='l', xaxt='n')#
axis(side=1, at=pretty(1:length(Steps.ByInt.vec), #
     names(Steps.ByInt.vec)[pretty(1:length(Steps.ByInt.vec))],#
     las=2)
pretty(1:length(Steps.ByInt.vec)
pretty(1:length(Steps.ByInt.vec))
plot(x=1:length(Steps.ByInt.vec), xlab='Interval of Day', #
    y=Steps.ByInt.vec, ylab='Steps', type='l', xaxt='n')#
axis(side=1, at=pretty(1:length(Steps.ByInt.vec)),#
     names(Steps.ByInt.vec)[pretty(1:length(Steps.ByInt.vec))],#
     las=2)
retty(1:length(Steps.ByInt.vec)
{}
p
plot(x=1:length(Steps.ByInt.vec), xlab='Interval of Day', #
    y=Steps.ByInt.vec, ylab='Steps', type='l', xaxt='n')#
axis(side=1, at=pretty(1:length(Steps.ByInt.vec)),#
     names(Steps.ByInt.vec)[pretty(1:length(Steps.ByInt.vec))],#
     las=2
)
pretty(1:length(Steps.ByInt.vec))
length(Steps.ByInt.vec)
plot(x=1:length(Steps.ByInt.vec), xlab='Interval of Day', #
    y=Steps.ByInt.vec, ylab='Steps', type='l', xaxt='n')#
axis(side=1, at=match(unique(act.frm$Hr), act.frm$Hr),#
     names(Steps.ByInt.vec)[match(unique(act.frm$Hr), act.frm$Hr)]`#
     las=2)
)
)
''
;
''
""
"
'
'
'
'
]
``
plot(x=1:length(Steps.ByInt.vec), xlab='Interval of Day', #
    y=Steps.ByInt.vec, ylab='Steps', type='l', xaxt='n')#
axis(side=1, at=match(unique(act.frm$Hr), act.frm$Hr),#
     names(Steps.ByInt.vec)[match(unique(act.frm$Hr), act.frm$Hr)],#
     las=2)
What is the average daily activity pattern?#
   with(act.frm,#
   Steps.ByInt.lst <<- split(Steps,#
      paste(formatC(Hr, width=2, flag='0'),#
            formatC(Min, width=2, flag='0'), #
            sep=':'#
       )#
    )#
   )#
Steps.ByInt.vec <- sapply(Steps.ByInt.lst, mean, na.rm=T)#
#
plot(x=1:length(Steps.ByInt.vec), xlab='Interval of Day', #
    y=Steps.ByInt.vec, ylab='Steps', type='l', xaxt='n')#
axis(side=1, at=match(unique(act.frm$Hr), act.frm$Hr),#
     names(Steps.ByInt.vec)[match(unique(act.frm$Hr), act.frm$Hr)],#
     las=2)
plot(x=1:length(Steps.ByInt.vec), xlab='Time of Day',#
    y=Steps.ByInt.vec, ylab='Steps per 5 Min Interval', type='l', xaxt='n')#
axis(side=1, at=match(unique(act.frm$Hr), act.frm$Hr),#
     names(Steps.ByInt.vec)[match(unique(act.frm$Hr), act.frm$Hr)],#
     las=2)
plot(x=1:length(Steps.ByInt.vec), xlab='Time of Day',#
    y=Steps.ByInt.vec, ylab='Steps per 5 Min Interval', type='l', xaxt='n')#
axis(side=1, at=match(unique(act.frm$Hr), act.frm$Hr),#
     names(act.frm$Hr)[match(unique(act.frm$Hr), act.frm$Hr)],#
     las=2)
plot(x=1:length(Steps.ByInt.vec), xlab='Time of Day',#
    y=Steps.ByInt.vec, ylab='Steps per 5 Min Interval', type='l', xaxt='n')#
axis(side=1, at=match(unique(act.frm$Hr), act.frm$Hr),#
     act.frm$Hr[match(unique(act.frm$Hr), act.frm$Hr)],#
     las=2)
plot(x=1:length(Steps.ByInt.vec), xlab='Time of Day',#
    y=Steps.ByInt.vec, ylab='Steps per 5 Min Interval', type='l', xaxt='n')#
#
axis(side=1, at=match(unique(act.frm$Hr), act.frm$Hr),#
     formatC(act.frm$Hr,width=2, flag='0')[match(unique(act.frm$Hr), act.frm$Hr)],#
     las=1)
zz()
zz()
PNG <- 'x11'
zz()
pngPLOT()
GRAPH_PNG <- "Graphs/S1A/png/"#
dir.create(GRAPH_PNG)#
############################################################
# Read Da
pngPLOT()
list.files()
GRAPH_DIR <- "Graphs/S1A"#
dir.create(GRAPH_DIR)#
#
GRAPH_PNG <- "Graphs/S1A/png/"#
dir.create(GRAPH_PNG)
pngPLOT()
act.frm[1,]
par(mfrow=c(2,1), mar=c(2,2,2,1), omc-c(2,2,2,0))#
#
for(DT in unique(act.frm$DayType)) {#
   DT.rows <- which(act.frm$DayType == DT)#
   with(act.frm[DT.rows,],#
   DT.Steps.ByInt.lst <<- split(Steps,#
      paste(formatC(Hr, width=2, flag='0'),#
            formatC(Min, width=2, flag='0'),#
            sep=':'#
       )#
    )#
   )#
   DT.Steps.ByInt.vec <- sapply(DT.Steps.ByInt.lst, mean, na.rm=T)#
#
   plot(x=1:length(DT.Steps.ByInt.vec), xlab='',#
    y=Steps.ByInt.vec, ylab='', type='', xaxt='n')#
   title(DT)#
}
zz()
par(mfrow=c(2,1), mar=c(2,2,2,1), oma=c(2,2,2,0))#
#
for(DT in unique(act.frm$DayType)) {#
   DT.rows <- which(act.frm$DayType == DT)#
   DT.act.frm <- act.frm[DT.rows,]#
   with(DT.act.frm,#
   DT.Steps.ByInt.lst <<- split(Steps,#
      paste(formatC(Hr, width=2, flag='0'),#
            formatC(Min, width=2, flag='0'),#
            sep=':'#
       )#
    )#
   )#
   DT.Steps.ByInt.vec <- sapply(DT.Steps.ByInt.lst, mean, na.rm=T)#
#
   plot(x=1:length(DT.Steps.ByInt.vec), xlab='',#
        y=DT.Steps.ByInt.vec, ylab='', type='l', xaxt='n')#
   title(DT)#
   axis(side=1, at=match(unique(DT.act.frm$Hr), act.frm$Hr),#
     formatC(DT.act.frm$Hr,width=2, flag='0')[match(unique(DT.act.frm$Hr), DT.act.frm$Hr)],#
     las=1)#
}
mtext(side=2, outer=T, 'Steps per 5 Min Interval')#
mtext(sire=3, outer=T, cex=1.25,#
      "Average Daily Activity Pattern by day type"))#
#
if(PNG != 'x11') dev.off()
zz()
PNG
PNG   <- 'x11'
zz()
Steps.ByInt.vec.lst <- lapply(unique(act.frm$DayType),#
   function(DT) {#
   DT.rows <- which(act.frm$DayType == DT)#
   DT.act.frm <- act.frm[DT.rows,]#
   with(DT.act.frm,#
   DT.Steps.ByInt.lst <<- split(Steps,#
      paste(formatC(Hr, width=2, flag='0'),#
            formatC(Min, width=2, flag='0'),#
            sep=':'#
       )#
    )#
   )#
   sapply(DT.Steps.ByInt.lst, mean, na.rm=T)#
  })
str(DT.Steps.ByInt.lst)
names(Steps.ByInt.vec.lst)
Steps.ByInt.vec.lst
names(Steps.ByInt.vec.lst) <- unique(act.frm$DayType)
names(Steps.ByInt.vec.lst)
plot(x=1:length(Steps.ByInt.vec.lst[["WeekDay"]],  xlab='Hour of Day',#
        y=Steps.ByInt.vec.lst[["WeekDay"]], ylab='Steps per 5 Min Interval', #
        type='l', col='blue', ylim=range(unlist(Steps.ByInt.vec.lst)), xaxt='n')#
#
lines(x=1:length(Steps.ByInt.vec.lst[["WeekEnd"]],  xlab='Hour of Day',#
        y=Steps.ByInt.vec.lst[["WeekEnd"]], ylab='Steps per 5 Min Interval',#
        type='l', col='red', xaxt='n')
sapply(Steps.ByInt.vec.lst, length)
sum(names(Steps.ByInt.vec.lst[[1]]) != names(Steps.ByInt.vec.lst[[2]]))
sum(names(Steps.ByInt.vec.lst[[1]]) == names(Steps.ByInt.vec.lst[[2]]))
plot(x=1:length(Steps.ByInt.vec.lst[["WeekDay"]]),  xlab='Hour of Day',#
        y=Steps.ByInt.vec.lst[["WeekDay"]], ylab='Steps per 5 Min Interval', #
        type='l', col='blue', ylim=range(unlist(Steps.ByInt.vec.lst)), xaxt='n')#
#
lines(x=1:length(Steps.ByInt.vec.lst[["WeekEnd"]]),  xlab='Hour of Day',#
        y=Steps.ByInt.vec.lst[["WeekEnd"]], ylab='Steps per 5 Min Interval',#
        type='l', col='red', xaxt='n')
StepsPerHrByDayType.vec <- sapply(Steps.ByInt.vec.lst, mean, na.rm=T)*12
StepsPerHrByDayType.vec
zz()
zz()
legend('topleft',#
   legend=c("WeekDay", "WeekEnd"), lty='1', col=c('blue', 'red'))
legend('topleft',#
   legend=c("WeekDay", "WeekEnd"), lty=1, col=c('blue', 'red'))#
#
StepsPerHrByDayType.vec <- sapply(Steps.ByInt.vec.lst, mean, na.rm=T)*12#
#
if(PNG != 'x11') dev.off()#
#
# Might be better to look at difference directyl
tle("Average Daily Activity Pattern by day type")#
legend('topleft',#
   legend=c(paste("WeekDay (Mean=", round(StepsPerHrByDayType.vec["WeekDay"]),")", sep=''),#
            "WeekEnd"),#
   lty=1, col=c('blue', 'red'))
tern by day type")#
legend('topleft',#
   legend=c(paste("WeekDay (Mean=", round(StepsPerHrByDayType.vec["WeekDay"]),")", sep=''),#
            paste("WeekEnd (Mean=", round(StepsPerHrByEndType.vec["WeekEnd"]),")", sep='')),#
   lty=1, col=c('blue', 'red'),bty='n', cex=0.8)
legend('topleft',#
   legend=c(paste("WeekDay (Mean=", round(StepsPerHrByDayType.vec["WeekDay"]),")", sep=''),#
            paste("WeekEnd (Mean=", round(StepsPerHrByDayType.vec["WeekEnd"]),")", sep='')),#
   lty=1, col=c('blue', 'red'),bty='n', cex=0.8)
zz()
StepsPerHrByDayType.vec <- sapply(Steps.ByInt.vec.lst, mean, na.rm=T)*12#
StepsPerHrByDayType.vec
zz()
pngPLOT()
pngPLOT()
zz()
zz()
pngPLOT()
zz()
pngPLOT()
q()
